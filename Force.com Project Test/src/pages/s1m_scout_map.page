<apex:page controller="s1m_scout" 
docType="html-5.0" applyBodyTag="false" applyHtmlTag="true" cache="false" showHeader="false" 
standardStylesheets="false" sidebar="false" manifest="/apex/CacheManifest">
    
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

	<link rel="stylesheet" href="{!URLFOR($Resource.stylepack, 'stylepack/css/jquery.mobile.flatui.css')}"></link>
	<link rel="stylesheet" href="{!URLFOR($Resource.stylepack, 'stylepack/css/icons.css')}"></link>
	<link rel="stylesheet" href="{!URLFOR($Resource.stylepack, 'stylepack/css/fontawesome/css/font-awesome.min.css')}"></link>

	<script src="{!URLFOR($Resource.stylepack, 'stylepack/js/jquery.js')}"></script>

    <script>
        $(document).on("mobileinit", function () {
          $.mobile.hashListeningEnabled = false;
          $.mobile.pushStateEnabled = false;
          $.mobile.changePage.defaults.changeHash = false;
        });
    </script>

	<script src="{!URLFOR($Resource.stylepack, 'stylepack/js/jquery.mobile-1.4.0-rc.1.js')}"></script>

	<script src="{!URLFOR($Resource.stylepack, 'stylepack/js/Class.create.js')}"></script>
	<script src="{!URLFOR($Resource.stylepack, 'stylepack/js/jquery-encoder-0.1.0.js')}"></script>

    <script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key={!JSENCODE($Setup.S1M_Google_API_Keys__c.S1M_Google_MAP_API_Key__c)}">
    </script>
    
	<script>
	// **** START AJAX wrapper with Token ****
		var s1token = window.localStorage.getItem('s1token');
		var s1tokenexpires = window.localStorage.getItem('s1tokenexpires');
	
		function getNewToken(callback) {
			$.ajax({
				type: "GET",
				cache: false,
				dataType: "json",
				url: "{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/token?sessionId={!$Api.Session_ID}&serverUrl={!$Api.Partner_Server_URL_80}",
				success: function(s1token){
					console.info(s1token);
					window.localStorage.setItem('s1token', s1token.token);
					window.localStorage.setItem('s1tokenexpires', s1token.expires);
					callback();
				}
			});
		}
		
		function authenticate(callback) {
			if (s1token) {	
				if (s1tokenexpires < Date.now()) { getNewToken(function() { callback(); }); }
				else { callback(); }
			}
			else
			{
				getNewToken(function() { callback(); });			
			}
		}
	
		function getIgnition(requestUrl, dataBundle, requestMethod, callback) {
		    authenticate(function() {
			    $.ajax({
		       		url: requestUrl,			    
			        async: false,
			        data : dataBundle,
			        type: requestMethod,
			        dataType: 'json',
					headers: { 'x-access-token' : window.localStorage.getItem('s1token'), 'x-access-user' : '{!$User.UserName}'},
			        success: function (data) {
			            callback(data);
			        }
			    });
			}); 
		};
	// **** END AJAX wrapper with Token ****
	</script>    


  <div data-role="page" id="mainpage">

            
		<a href="#filter" data-iconpos="notext" id="filter-button" data-transition="fade"><span class="icon-utility-filter filter"></span></a>
         

        <div id="driveinfo">
            <div id="duration"></div>
            <div id="total"></div>
            <div id="turnbyturn">
            	<div id="tbtinside">
            			<div class="turnicon"><i class="fa fa-arrow-circle-o-right tbtopen"></i><i class="fa fa-times-circle-o tbtclose"></i></div>
            			<div class="turntext tbtopen">turns</div><div class="turntext tbtclose">close</div>
            	</div>
            </div>
           	<div id="from"></div>
           	<div id="canceldirections" onclick="cancelDirections();return false;"><i class="fa fa-angle-up"></i></div>
        </div>


	<div id="directions-panel"></div>

	<div id="match-panel">
		<h2 id="matchcount"></h2>
	</div>


    <div id="map-canvas">

    	<div class="loader" id="mainloader"></div>
		
		<div id="noresults">
			<h2>No results found</h2>
			<p>There may be no matches within your area based on your location of filter settings</p>
		</div>
		
    </div>
		
		
  
  
  </div>
    
    
    
  <div data-role="page" id="filter">
  
    <div data-role="content">  	
  	
  		<ul data-role="listview" data-inset="true" class="ui-listview ui-listview-inset ui-corner-all ui-shadow" style="padding:0px">
  			<li class="ui-li-static ui-body-inherit ui-first-child ui-last-child">
				<h2>Settings</h2>
			</li>
			<li>
			<div class="filterwrapper">
				<div class="ui-radio2" style="width:50%"><label for="opptype-a" class="ui-btn ui-corner-all ui-btn-c ui-btn-icon-left ui-first-child ui-radio-on">Standard</label>
          			<input type="radio" name="opptype" data-theme="c" id="opptype-a" value="std" checked="checked" />
          		</div>
          		<div class="ui-radio2" style="width:50%"><label for="opptype-b" class="ui-btn ui-corner-all ui-btn-c ui-btn-icon-left ui-radio-off">Social</label>
          			<input type="radio" name="opptype" data-theme="c" id="opptype-b" value="soc" />
          		</div>
			</div>
			<div class="filterwrapper">
				<h2>Filter View</h2>
			</div>

		      <div data-role="fieldcontain" class="selectmenu">
		        <select name="oppdistance" id="oppdistance" data-native-menu="false" data-theme="a" data-icon="carat-r">
		          <option value="5">Distance - 5 Miles</option>
		          <option value="10">Distance - 10 Miles</option>
		          <option value="25">Distance - 25 Miles</option>
		        </select>
		      </div>

		      <div data-role="fieldcontain" class="selectmenu">
		        <select name="oppsentiment" id="oppsentiment" data-native-menu="false" data-theme="a" data-icon="carat-r">
		          <option value="all">News Sentiment - All</option>
		          <option value="pos">News Sentiment - Positive</option>
		          <option value="neg">News Sentiment - Negative</option>
		        </select>
		      </div>

		      <div data-role="fieldcontain" class="selectmenu">
		        <select name="select-choice" id="opprating" data-native-menu="false" data-theme="a" data-icon="carat-r">
		          <option value="none">Rating - All</option>
		          <option value="hot">Rating - Hot</option>
		          <option value="warm">Rating - Warm</option>
		          <option value="cold">Rating - Cold</option>
		        </select>
		      </div>


		<div class="filterwrapper">
			<div data-theme="f" id="submitfilter" class="ui-btn ui-btn-f ui-shadow ui-corner-all half">submit</div>
			<div data-theme="c" id="cancel"  class="ui-btn ui-btn-c ui-shadow ui-corner-all half">cancel</div>
		</div>


			</li>
		</ul>
	

	</div>
  </div> 
    

    
    <script>    
	
	// For JS encoder
	var immune;    
    
    // Navigation for filters
    $('#submitfilter').click(function() {
    	// Refresh the list based on filter settings
			
			// Clean up any directions that were displayed
			directionsDisplay.setMap(null);
		  	$('#filter-button').removeClass('down');
		  	$('#driveinfooverlay').hide();
		  	$('#driveinfooverlay').hide();			
		  	$('#driveinfo').hide();

    	renderMap();
    	$.mobile.changePage( "#mainpage", { transition: "fade", changeHash: false });
    });

    $('#cancel').click(function() {
    	$.mobile.changePage( "#mainpage", { transition: "fade", changeHash: false });
    });
	// End navigation for filters
	
	
	
				  // Send the total data for the node, as well as the actual DOM node (then use - $('#block' + value))
				  function renderBigEvent(accountSentimentScore, value) {
					  
					  if (accountSentimentScore > 5) {
					  	$('*[data-sobjectid="' + accountId + '"]').addClass('indicator-' + codeClass);
					  	//$('div.event.account.news.' + value).addClass('event-sig-pos');
					  }
					  else if (accountSentimentScore < -5)
					  {
					  	$('*[data-sobjectid="' + accountId + '"]').addClass('indicator-' + codeClass);
						  //$('div.event.account.news.' + value).addClass('event-sig-neg');
				  	  }
				  	  
				  	  //return accountSetimentScore;
				  }	
	
    
    
    var currentInfoWindow = null;
    
		function distance(lat1, lon1, lat2, lon2, unit) {
			var radlat1 = Math.PI * lat1/180
			var radlat2 = Math.PI * lat2/180
			var radlon1 = Math.PI * lon1/180
			var radlon2 = Math.PI * lon2/180
			var theta = lon1-lon2
			var radtheta = Math.PI * theta/180
			var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
			dist = Math.acos(dist)
			dist = dist * 180/Math.PI
			dist = dist * 60 * 1.1515
			if (unit=="K") { dist = dist * 1.609344 }
			if (unit=="N") { dist = dist * 0.8684 }
			return dist
		}      
		
		
		function getParameterByName(name) {
			 return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null;
		}
		
		
		var map;
		var totalMatch = 0;
		
		function renderMap() {
		
			// reset total match
			totalMatch = 0;
		
           var remoteAction;
            
            // TODO - filter here based on what object is being viewed...
            remoteAction = '{!$RemoteAction.s1m_scout.getLocalOpportunities}';

             if (navigator.geolocation) {
                 navigator.geolocation.getCurrentPosition(
                     function(position){
                     lat = position.coords.latitude;
                     lon = position.coords.longitude;
                     
                     mylat = position.coords.latitude;
                     mylon = position.coords.longitude;
                     
                                          
                     //Use VF Remoting to send values to be
                     //queried in the associated Apex Class
                     
                     oppIndustryValue = 'none';
                     oppRatingValue = $('#opprating').val();
                     distanceValue = $('#oppdistance').val();
                     opptypeValue = $("input[type='radio'][name='opptype']:checked").val();
                     oppSentiment = $('#oppsentiment').val(); //oppsentiment
                     
                     // TODO - FILTER lat, lon, distanceValue, oppIndustryValue, oppRatingValue,
                     Visualforce.remoting.Manager.
                     invokeAction(
                         remoteAction, 
                         lat, lon, distanceValue, oppIndustryValue, oppRatingValue,
                         function(result, event) {
                         
                         	// Check for no results...
                         	if (!result)
                         	{
                         		$('#noresults').fadeIn();
                         		$('#map-canvas #mainloader').hide();
                         	}
                         	else
                         	{
                         		$('#noresults').hide();
                         	}
                         
                             if (event.status) {
								 
								var output =[];
						     	var $accountIds =[]; 
										
								$.each(result, function (index, article) {
			   						$accountIds.push(this.Id);
								});
					
							    output = $.unique($accountIds);
								
								 var url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/api/mapevents';
								 
								 if (result) {
									 getIgnition(url, {'mapdata' : 1, 'accounts': output}, 'POST', function( socialdata ) {								 
									 	
		                             	// This call used to be non-nested with the above REST call
		                             	createMap(lat, lon, result, socialdata);
		                             });
								 }

                             } else if (event.type === 
                             'exception') {
                                 //exception case code
                             } else {
                                            
                             }
                          }, 
                          {escape: true}
                      );
                  });
              } else {
              
              	console.info('Could not connect for Geolocation');
              	$('#noresults').fadeIn();
              
              		//Set default values for map if the device 
              		//doesn't have geolocation capabilities
                    /** San Francisco **/
                    lat = 37.77493;
                    lon = -122.419416;
                    
                    // TODO - could not get geo popup...
                    
                    var result = [];
                    createMap(lat, lon, result);
              }
              
         }		

		var directionsDisplay = new google.maps.DirectionsRenderer({
			    polylineOptions: {
			      strokeColor: "#5DAFF9",
			      strokeWeight: 5
			    }
			  });
		
		directionsDisplay.setOptions({ suppressMarkers: true });
		
		var directionsService = new google.maps.DirectionsService();
		
		var mylat, mylon;		
    
        function initialize() {   
        	renderMap();  
        }
         
         
		function calcRoute(startgeolat, startgeolon, stopgeolat, stopgeolon) {
			console.info(startgeolat + ', ' + startgeolon + ' to ' + stopgeolat + ', ' + stopgeolon);
			
			directionsDisplay.setMap(map);
			
		  var request = {
		    origin: startgeolat + ', ' + startgeolon,
		    destination: stopgeolat + ', ' + stopgeolon,
		    travelMode: google.maps.DirectionsTravelMode.DRIVING
		  };
		  directionsService.route(request, function(response, status) {
		    if (status == google.maps.DirectionsStatus.OK) {
		      directionsDisplay.setDirections(response);
		      
		      // Close current infowindow to make room
		      currentInfoWindow.close();
		    }
		  });
		  
		  // Show travel summary
		  $('#driveinfo').slideDown();
		  $('#filter-button').addClass('down');
		  $('#driveinfooverlay').fadeIn();
		  $('#driveinfooverlay').fadeIn();
		  
		}
		
		function cancelDirections()
		{
			directionsDisplay.setMap(null);
		  	$('#filter-button').removeClass('down');
		  	$('#driveinfooverlay').fadeOut();
		  	$('#driveinfooverlay').fadeOut();			
		  	$('#driveinfo').slideUp();
		}
		
		function computeTotalDistance(result) {
		  var total = 0;
		  var time= 0;
		  var from=0;
		  var to=0;
		  var myroute = result.routes[0];
		  for (var i = 0; i < myroute.legs.length; i++) {
		    total += myroute.legs[i].distance.value;
		    time +=myroute.legs[i].duration.text;
		    from =myroute.legs[i].start_address;
		    to =myroute.legs[i].end_address;
		  }
		  time = time.replace('hours','h');
		  time = time.replace('mins','m');
		  total = total / 1000;
		  var endPointAddress = to.split(',');
		  $('#from').html(endPointAddress[0] + ', ' + endPointAddress[1]);
		  $('#duration').html('<i class="fa fa-clock-o"></i> ' + time.replace(/^0+/, ''));
		  $('#total').html('<i class="fa fa-tachometer"></i> ' + (((total * 0.621371) * 100) / 100).toFixed(1) + '');		  
		}
    
    
    	function getSentimentGrade(socialSentiment)
    	{
    	
			// Default pin sentiment
			score = 'neu';
		
			if (socialSentiment > 2.5)
			{
				score = 'pos1';
			}
			else if (socialSentiment > .5)
			{
				score = 'pos0';
			}
			else if (socialSentiment < -0.5)
			{
				score = 'neg0';
			}
			else if (socialSentiment < -2.5)
			{
				score = 'neg1';
			}
		
			return score;

    	}
    
        
        function createMap(lat, lng, leads, socialdata){
         
            //Grab the map div and center the map at 
            //the proper latitude/longitude
            
            var mapDiv = document.getElementById('map-canvas');
            map = new google.maps.Map(mapDiv, {
                center: new google.maps.LatLng(lat, lng), 
                //zoom: 11,
                zoomControl: false,
                styles: [{"featureType":"administrative","elementType":"all","stylers":[{"visibility":"on"},{"saturation":-100},{"lightness":20}]},{"featureType":"road","elementType":"all","stylers":[{"visibility":"on"},{"saturation":-100},{"lightness":40}]},{"featureType":"water","elementType":"all","stylers":[{"visibility":"on"},{"saturation":-10},{"lightness":30}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"visibility":"simplified"},{"saturation":-60},{"lightness":10}]},{"featureType":"landscape.natural","elementType":"all","stylers":[{"visibility":"simplified"},{"saturation":-60},{"lightness":60}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"},{"saturation":-100},{"lightness":60}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"},{"saturation":-100},{"lightness":60}]}],
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: false,
                mapTypeControl: false
            });
                        
            directionsDisplay.setMap(map);
      		directionsDisplay.setPanel(document.getElementById('directions-panel'));
      		
      		google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
				computeTotalDistance(directionsDisplay.directions);
		    });
		                
            //Set up the markers for the map using the 
            //variable we queried for in our controller
            var lead;
            var social;
            
            leadCounter = leads.length;
            
            for(var i=0; i<leads.length;i++){
                lead = leads[i];

                setupMarker();
                
                if (!--leadCounter) {
					//getTopNews(newsAccountIds);
					
					suffix = '';
					
					if (totalMatch > 1)
					{
						suffix = 'es';
					}
					
					$('#matchcount').text(totalMatch + ' Match' + suffix);
					$('#match-panel').slideDown();
					setTimeout(
				  function() 
				  {
				    $('#match-panel').slideUp();
				  }, 3000);
				}
            }
            
              // Set marker for own location
              var url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/img/map-pin-here-retina.png';
			  var size;
			  var pinHeight;
			  var pinWidth;
		
			  if(window.devicePixelRatio > 1.5){
					url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/img/map-pin-here-retina.png';
					pinHeight = 128;
					pinWidth = 99;
			  }
			  else {
					pinHeight = 64;
					pinWidth = 49;
			  }
			  
			  var size = new google.maps.Size(pinWidth, pinHeight);
		
			  // Pin for Current Location
			  var herepin = {
					url: url,
					scaledSize: new google.maps.Size(49, 64),
				    origin: new google.maps.Point(0,0)
			  };	
			  
			  // Current Location
              var marker = new google.maps.Marker({
			      position: new google.maps.LatLng(lat, lng),
			      map: map,
			      icon: herepin
			  });
			  
			  // Use our current location to pan there
			  //map.setCenter(marker.getPosition());
			  
			  // Circle around the location showing the distance of the search filter
			  filterDistance = $('#oppdistance').val() * 1609.34;
			  
			  console.info(filterDistance);
			  
				var circle = new google.maps.Circle({
				  map: map,
				  radius: filterDistance,    // 10 miles in metres
			      strokeColor: '#5DAFF9',
			      strokeOpacity: 1,
			      strokeWeight: 2,
			      fillColor: '#333333',
			      fillOpacity: 0.05,
				});
				circle.bindTo('center', marker, 'position');

				map.fitBounds(circle.getBounds());


           function setupMarker(){
			   var accountMatch = $.grep(socialdata,function(e){return e.accountid.indexOf(lead.Id)>-1});
	           
               // Default content here (if not filtered via social - or social data did not come back?)                  

               var content; // content to appear in dialog
               var pinSize; // size on the basis of filter (e.g. social)
               var pinType; // regular, social, etc
               var pinSentiment; // category based on sentiment score
               var socialSentiment; // sentiment score
                  
               // If matching social data was found
               if (socialdata)
               {
               		// Check to make sure that the AccountId actually came back within Social - if not - use the next block of code to draw pin
               		if (accountMatch[0])
               		{
	               		console.log('... social data was received...');
	               		console.info(socialdata);
	               		
	               		endgeo = lead.Latitude + ', ' + lead.Longitude; // Latitude, Longitude
	               		
	               		var mapmatch = accountMatch[0];
	               		 
	               		content = '<div class="infopop"><div class="titletrim"><a href="#" onclick="sforce.one.navigateToSObject(\'' + 
	               					$.encoder.encodeForJavascript(mapmatch.accountid) + '\');return false;" class="account">' + 
	               					$.encoder.encodeForHTML(mapmatch.accountname) + '</a></div><div>' + 
	               				    		'<div class="mapclickzone opportunity"><img onclick="sforce.one.navigateToRelatedList(\'RelatedOpportunityList\', \'' + 
	               				    $.encoder.encodeForJavascript(mapmatch.accountid) + '\');return false;" src="{!URLFOR($Resource.stylepack, 'stylepack/icons/standard/opportunity.svg')}"/></div>' +
	               				    		'<div class="mapclickzone contact"><img onclick="sforce.one.navigateToRelatedList(\'RelatedContactList\', \'' + 
	               				    $.encoder.encodeForJavascript(mapmatch.accountid) + '\');return false;" src="{!URLFOR($Resource.stylepack, 'stylepack/icons/standard/contact.svg')}"/></div>' +
	               				    		'<div class="mapclickzone news" data-sobjectid="' + 
	               				    $.encoder.encodeForHTML(mapmatch.accountid) + '"><div onclick="sforce.one.navigateToURL(\'/apex/s1m_metro_news?id=' + 
	               				    $.encoder.encodeForJavascript(mapmatch.accountid) + '\');return false;" class="newsicon"></div></div>' +
	               		            		'<a href="#" data-theme="c" onclick="calcRoute(\'' + mylat + '\', \'' + mylon + '\', \'' + lead.Latitude + '\', \'' + lead.Longitude + '\'); return false;"' + 
	               		            		'class="ui-btn ui-btn-c ui-shadow ui-corner-all" style="width: 91%;float: left;">Drive</a></div>';
	               				               		
	               		// Logic for pin size on social filter
	               		// e.g. Did something large happen?
	               		socialweight = accountMatch[0].percent_twitter_share;
	               		
	               		if (opptypeValue == 'soc') {
	               			// Process pin style for social filter view
	               		
		               		if (socialweight >= 60)
		               		{
		               			pinSize = 'lg';
		               		}
		               		else if (socialweight < 60 && socialweight <= 30)
		               		{
		               			pinSize = 'md';
		               		}
		               		else {
		               			pinSize = 'sm';
		               		}

		               		// Get pin "color" given the Sentiment score
		               		socialSentiment = accountMatch[0].avg_setiment;
		               		pinSentiment = getSentimentGrade(socialSentiment);		               		
		               		pinType = 'soc';
		               	}
		               	else
		               	{
		               		// Process pin style for standard view
		               		
		               		if (lead.Opp.length > 2)
		               		{
		               			pinSize = 'lg';
		               		}
		               		else if (lead.Opp.length > 1)
		               		{
		               			pinSize = 'md';
		               		}
		               		else {
		               			pinSize = 'sm';
		               		}
		               		pinType = 'opp';
		               		pinSentiment = 'na';
		               	}
	               			               		
	               		
	               	}
	               	else  // There was no match on the Account for the social data that was returned
	               	{
	               		endgeo = lead.Latitude + ', ' + lead.Longitude;
	               		 
	               		content = '<div class="infopop"><div class="titletrim"><a href="#" onclick="sforce.one.navigateToSObject(\'' + $.encoder.encodeForJavascript(lead.Id) + '\');return false;" class="account">' + $.encoder.encodeForHTML(lead.AccountName) + '</a></div><div>' + 
	               				  '<div class="mapclickzone opportunity"><img onclick="sforce.one.navigateToRelatedList(\'RelatedOpportunityList\', \'' + $.encoder.encodeForJavascript(lead.Id) + '\');return false;" src="{!URLFOR($Resource.stylepack, 'stylepack/icons/standard/opportunity.svg')}"/></div>' +
	               				  '<div class="mapclickzone contact"><img onclick="sforce.one.navigateToRelatedList(\'RelatedContactList\', \'' + $.encoder.encodeForJavascript(lead.Id) + '\');return false;" src="{!URLFOR($Resource.stylepack, 'stylepack/icons/standard/contact.svg')}"/></div>' +
	               				  '<div class="mapclickzone news" data-sobjectid="' + $.encoder.encodeForHTML(lead.Id) + '"><div onclick="sforce.one.navigateToURL(\'/apex/s1m_metro_news?id=' + $.encoder.encodeForJavascript(lead.Id) + '\');return false;" class="newsicon"></div></div>' +
	               		          '<a href="#" data-theme="c" onclick="calcRoute(\'' + mylat + '\', \'' + mylon + '\', \'' + lead.Latitude + '\', \'' + lead.Longitude + '\'); return false;"' + 
	               		          'class="ui-btn ui-btn-c ui-shadow ui-corner-all" style="width: 91%;float: left;">Drive</a></div>';

						// Defaults
		               	pinSentiment = 'na';
		               	pinType = 'opp';
		               	
		               	if (opptypeValue == 'soc') {
		               		pinType = 'soc';
		               		pinSentiment = 'neu';
		               	}
		               	
		               	if (lead.Opp.length > 2)
		               	{
		               		pinSize = 'lg';
		               	}
		               	else if (lead.Opp.length > 1)
		               	{
		               		pinSize = 'md';
		               	}
		               	else {
		               		pinSize = 'sm';
		               	}

               		}
               }
               else {
               	// if not set to social filter...
               }
                   
               // Create the callout that will pop up
               var infowindow = new google.maps.
                   InfoWindow({ 
                   content: content,
                   sObjectId: lead.Id
               });
               
               
	              var pinHeight;
				  var pinWidth;
			
				  if(window.devicePixelRatio > 1.5){
						// size = new google.maps.Size(99, 128);
						pinHeight = 128;
						pinWidth = 99;
				  }
				  else {
				  		//size = new google.maps.Size(49, 64);
						pinHeight = 64;
						pinWidth = 49;
				  }
           	               	
               	var url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/img/map-pin-' + pinType + '-' + pinSize + '-' + pinSentiment + '-retina.png';

				size = new google.maps.Size(pinWidth, pinHeight);
		
				// Retina display
				if(window.devicePixelRatio > 1.5){
					url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/img/map-pin-' + pinType + '-' + pinSize + '-' + pinSentiment + '-retina.png';
					size = new google.maps.Size(pinWidth, pinHeight);
				}
		
				var imagepin = {
					url: url,
					scaledSize: new google.maps.Size(49, 64),
				    origin: new google.maps.Point(0,0)
				};	  


               // Place the marker - BUT 
               // Check to see if Setiment Filter is on
               var socialFilterPass = false;
               
               console.warn('---- BOOL COMPARE ----');
				console.warn('PIN: ' + pinSentiment);
               console.warn('SET: ' + oppSentiment);
			
               
               if (oppSentiment == 'pos' && socialSentiment > 0)
               {
               		socialFilterPass = true;
               }
               if (oppSentiment == 'neg' && socialSentiment < 0)
               {
               		socialFilterPass = true;
               }
               if (oppSentiment == 'all' || opptypeValue == 'std')
               {
               		socialFilterPass = true;
               }
               
               
               if (socialFilterPass)
               {
               	   totalMatch += 1;
	               var marker = new google.maps.Marker({
	                   map: map,
	                   position: new google.maps.LatLng(lead.Latitude, lead.Longitude),
	                   icon: imagepin,
	                   animation: google.maps.Animation.DROP
	               });
	               
	               //Create an action to open the callout
	               google.maps.event.addListener(
	                   marker, 'click', function(){
					                   
					   if (currentInfoWindow != null)
					   { 
					   	currentInfoWindow.close();
					   }
					   
	                   currentInfoWindow = infowindow;
	                   console.info(infowindow.sObjectId);
	                                     
	                   infowindow.open(map, marker);
	                   renderEventNews(infowindow.sObjectId);                   
	               });
			  }               
              
        
               // Check if URL parameter for a given Opp, if so, open the Infowindow
               if (getParameterByName('opportunityid'))
               {
               		console.info('Checking ' + getParameterByName('opportunityid') + ' vs ' + lead.Id);

               		if ($.encoder.canonicalize(getParameterByName('opportunityid')) == $.encoder.canonicalize(lead.Id))
               		{
               			currentInfoWindow = infowindow;
               			infowindow.open(map, marker);
               			map.setCenter(marker.getPosition());
               			setTimeout(function() {
						      renderEventNews(infowindow.sObjectId);
						}, 500);
               		}
               }         
 
           }
        }
        
        
        google.maps.event.addDomListener(window, 'load', initialize);
        
        $('#turnbyturn').click(function() {
        	$('#directions-panel').slideToggle();
        	$('.tbtopen').toggle();
        	$('.tbtclose').toggle();        	
        });



		// *** NEW - Add News on the basis of the map pin
		function renderEventNews(accountId) {		
			var output =[];

		    output.push(accountId);
		    
			
			var url = '{!JSENCODE($Setup.S1M_Heroku_Services__c.S1M_Heroku_App_URL__c)}/api/mapevents';
			
			//$.post(url, {'mapdata' : 1, 'accounts': output}, function( socialdata ) {	
							
			getIgnition(url, {'mapdata' : 1, 'accounts': output}, 'POST', function( socialdata ) {
					
				  var accountSentimentScore = 0;

				  // Count major events
				  var setimentCount = 0;

					if (socialdata[0])
					{
						accountSentimentScore = socialdata[0].avg_setiment;
						codeClass = getSentimentGrade(accountSentimentScore);
						renderBigEvent(accountSentimentScore, accountId);					
		
						// accountId
						$('*[data-sobjectid="' + accountId + '"]').addClass('indicator-' + codeClass);
						$('*[data-sobjectid="' + accountId + '"] .newsicon').fadeIn();
					}
			});
		}
		// End render event news

</script>
    

	
	
	<style>    


		.indicator-neg1 {
			background: #E15D76 ! important;
		}

		.indicator-neg0 {
			background: #E1BE5C ! important;
		}

		.indicator-neu, .indicator-neutral {
			background: #E3E1E2 ! important;
		}

		.indicator-pos0 {
			background: #B8EB9F ! important;
		}

		.indicator-pos1 {
			background: #4BC076 ! important;
		}		
		
		
	.ui-btn.half
		{
			width: 40%;
			float: left;
		}
		
		.ui-btn.half:last-child
		{
			float: right;
		}

/* SELECT LISTS */		
		.ui-field-contain, .ui-mobile fieldset.ui-field-contain {
padding: .4em 0;
}

html .ui-page-theme-a .ui-btn, html body .ui-group-theme-a .ui-btn
{
	background: #F0F1F2;
	color: #333;
	border-color: #ccc;
}

		i.filtericon
		{
			margin-top: 10px; 
			font-size: 1.6em;
			margin-left: 14px;		
		}		
/* END SELECT LISTS */

/* START --- GENERAL SELECT MENU */
html .ui-page-theme-a div.selectmenu a.ui-btn {
text-align: left;
padding: 13px;
background: #fff;
color: #333;
font-weight: normal;
border: 1px solid #dfe0e1;
font-size: 13px;
}

.ui-icon-carat-r:after {
background-image: url('{!URLFOR($Resource.stylepack, 'stylepack/img/select-carat-icon.png')}');
}

.ui-btn-icon-left:after, .ui-btn-icon-right:after, .ui-btn-icon-top:after, .ui-btn-icon-bottom:after, .ui-btn-icon-notext:after {
 background-color: transparent;
 background-position: center center; 
background-repeat: no-repeat;
 -webkit-border-radius: 0px;
border-radius: 1em;
}

ul.ui-selectmenu-list li a {
	font-size: 14px;
	font-weight: normal;
	padding: 14px;
}

/* END --- GENERAL SELECT MENU */



	/* // For ONLY this page */


.ui-btn.ui-checkbox-off:after, .ui-btn.ui-radio-off:after
{
	background-color: #666 ! important;
	background-color: rgba(0,0,0,.3) ! important;
	background-position: center center;
	background-repeat: no-repeat;
	-webkit-border-radius: 1em ! important;
	border-radius: 1em ! important;
}

.ui-btn.ui-checkbox-on:after, .ui-btn.ui-radio-on:after
{
	background-color: #fff ! important;
	width: 12px ! important;
	height: 12px ! important;
}

div.turntext {
	float: left;
	margin-left: 6px;
}

div.turnicon
{
	float: left;
}

.tbtclose {
	display: none;
}

.tbtopen, .tbtclose {
	float: left;
}

	#canceldirections {
/* margin: auto; */
color: #fff;
/* float: left; */
text-align: center;
width: 100%;
/* padding: 10px; */
margin: 10px;
margin-left: -14px;
margin-top: 60px;
height: 34px;
font-size: 2.6em;
	}

	div.filterwrapper {
		width: 100%;
		float: left;
	}

	img.newsfilter {
	width: 24px;
margin-left: 14px;
margin-top: 12px;
	}

html .ui-page-theme-a div.selectmenu a.ui-btn
{
text-align: left;
padding: 14px;
background: #fff;
color: #333;
font-weight: normal;
border: 1px solid #dfe0e1;
}



.ui-icon-carat-d:after
{
	background-image: none;
}


		body .ui-radio2 .ui-btn.ui-btn-c
		{
			/* background: #2A93D5; */
			border-color: transparent;
			color: #333;
			
			background: #fff;				
		}
		
		div.ui-radio2 {
			float: left;
		}
		
		body .ui-radio2 .ui-btn.ui-btn-c, body .ui-radio2 .ui-btn.ui-btn-c:active, body .ui-radio2 .ui-btn.ui-btn-c:hover
		{
			background: #fff;
			color: #333;
			border: 1px transparent;
		}		
	
	i.currentlocation {
		background: #FFCE00;
		padding: 4px;
		border-radius: 40px;
		color: #fff;
		border: 3px solid #333333;
		font-size: .9em;
	}
	
	a.account {
		font-size: 1.6em;
	}
	
	#driveinfo {
		display: none;
	}
	
		#driveinfo
	{
		/* background: #fff;
		z-index: 3;
		position: absolute;
		opacity: .7;
		color: #333;
		height: 130px;
		width: 100%; */
/* background: #137DBE; #344A5F; */
z-index: 3;
position: absolute;
color: #fff;
padding: 14px 14px 0px 14px;
width: 100%;		

background: -moz-linear-gradient(#23394d,#33495f);
background: -webkit-gradient(linear,left top,left bottom,color-stop(0%,#33495f),color-stop(100%,#23394d));
background: -webkit-linear-gradient(#23394d,#33495f);
background: -o-linear-gradient(#23394d,#33495f);
background: -ms-linear-gradient(#23394d,#33495f);
background: linear-gradient(#23394d,#33495f);

	}
	
	
	#driveinfooverlay {
		/* background: #fff; */
		display: none;
z-index: 4;
position: absolute;
opacity: 1;
color: #333;
padding: 14px;
width: 100%;
	}
	
	#filter-button
	{
		position: absolute;
		top: 14px;
		right: 14px;
		z-index: 99;
		font-size: 1.6em;
		border: none;
background: -moz-linear-gradient(#23394d,#33495f);
background: -webkit-gradient(linear,left top,left bottom,color-stop(0%,#33495f),color-stop(100%,#23394d));
background: -webkit-linear-gradient(#23394d,#33495f);
background: -o-linear-gradient(#23394d,#33495f);
background: -ms-linear-gradient(#23394d,#33495f);
background: linear-gradient(#23394d,#33495f);
		color: #fff;
		padding: 14px;
		border-radius: 5px;
		transition: background 0.5s ease;
	}
	
	#filter-button.down {
		background: none;
	}
	
	#duration, #total, #turnbyturn {
		float: left;
		font-size: 1.6em;
		border-radius: 5px;
		opacity: 1;
		margin-right: 14px;
		
	}
	
	#turnbyturn {
/*		background: #333;
		color: #fff;
		padding: 8px;
		border-radius: 5px;
		font-weight: bold;
		width: 32px;
		text-align: center;*/

		font-size: 1.2em;
		line-height: 1.8em;
		color: #61B7EC;
		float: left;
		margin-right: 0px;		
		height: 30px;
		width: 70px;		
	}
	
	#turnbyturn i.fa {
		font-size: 1.4em;
		line-height: 1.3em;
	}
	
	#from {
		width: 90%;
		float: left;
		padding-top: 8px;
		font-size: 1.1em;
		color: #fff;
		
	}
	
	div.mapclickzone {
		width: 44px;
		height: 44px;
	}
	
	div.titletrim
	{
width: 92%;
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;
height: 35px;
font-size: .9em;
	}

	div.mapclickzone.opportunity {
		/* background: #FCB95B; */
		border-radius: 5px;
		float: left;
	}

	div.mapclickzone.contact {
		/* background: #FCB95B; */
		border-radius: 5px;
		float: left;
		margin-left: 14px;
		margin-right: 14px;
	}
	
	div.mapclickzone.opportunity img, div.mapclickzone.contact img {
		width: 44px;
		height: 44px;
	}

	div.mapclickzone.news {
		background: #f9f9f9;
		border-radius: 5px;
		float: left;
		text-align: center;
		font-size: 2em;
		line-height: 1.6em;
		transition: background 1s ease;
		transition: background-color 1s ease;
	}

	div.mapclickzone.news .newsicon {
		display: none;
		height: 41px;
	}
		
	.infopop {
		width: 160px;
	}
	
	.gm-style {
		font-family: ProximaNova;
	}
	
	
.gm-style .gm-style-iw {
color: #333;
}
	

.adp-placemark
{
	display: none;
}	

table.adp-directions tr
{
	min-height: 40px;
}
	
	
	#noresults {
		display: none;
		width: 80%;
		margin: auto;
		background: #fff;
		color: #333;
		border-radius: 5px;		
		margin: auto;
		height: 100px;
		margin-top:50%;	
		padding: 14px;
	}
	
	#noresults h2 {
		margin-top: 0px;
	}
	
		.loader {
			margin: auto;
			width: 38px;
			height: 38px;
			background: url('{!URLFOR($Resource.stylepack, 'stylepack/img/loading-gray.gif')}');
			background-size:38px;
			margin-top:50%;			
		}
	
	
	/* Disable some of the default directions UI, as it is redundant */
	#adp-placemark, .adp-summary {
		display: none;
	}
	
	
	      #directions-panel {
        /*height: 100%;*/
		width: 100%;
		display:none;
		/* margin-left: 5%;
		margin-bottom: 10px; */
		overflow: auto;
		position: fixed;
		bottom: 0px;
		height: 200px;
		z-index: 2;
		background: #fff;
		overflow-x: auto;
		border-top: 5px solid #33495f;
		border-radius: 0px;
		/* -webkit-box-shadow: 0px 0px 2px 2px rgba(50, 50, 50, 0.25);
		-moz-box-shadow:    0px 0px 2px 2px rgba(50, 50, 50, 0.25);
		box-shadow:         0px 0px 2px 2px rgba(50, 50, 50, 0.25); */
      }
      
#match-panel {
/* height: 100%; */
width: 100%;
display: none;
overflow: auto;
position: fixed;
bottom: 0px;
height: 70px;
z-index: 2;
/* background: #fff; */
overflow-x: auto;
/* border-top: 5px solid #33495f; */
border-radius: 0px;
text-align: center;
color: #fff;
background: -moz-linear-gradient(#23394d,#33495f);
background: -webkit-gradient(linear,left top,left bottom,color-stop(0%,#33495f),color-stop(100%,#23394d));
background: -webkit-linear-gradient(#23394d,#33495f);
background: -o-linear-gradient(#23394d,#33495f);
background: -ms-linear-gradient(#23394d,#33495f);
background: linear-gradient(#23394d,#33495f);
}      
	
	

    #map-canvas {
    position:fixed !important;
position:absolute;
top:0;
right:0;
bottom:0;
left:0;
/* margin-top:60px; */
    }
    
    	div.fullwidth {
    		width: 100%;
    	}
    	
    	div.nodetopdetail {
    		margin-left: 54px;
    	}
    	
    	div.nodetopdetail.bottomline {
    		border-bottom: 1px solid #f5f5f6;
    		padding-bottom: 10px;
    		margin-bottom: 10px;
    	}
    	
    	div.right {
    		float: right;
    		margin-top: -10px;
    	}
    	
    	div.iconbuttons span {
    		font-size: 1.6em;
    		margin-left: 12px;
    	}
    	
	    	
		.appointment {
			padding-left: 10px 80px;
		}
		
		#loader {
			width: 100%;
			text-align: center;
			padding-top: 50px;
			color: #A7D4F0;
			font-size: 3em;
		}
		

		@font-face {
		  font-family: 'ProximaNova';
		  src: url("{!URLFOR($Resource.stylepack, 'stylepack/css/fonts/ProximaNovaSoft-Regular.ttf')}") format('truetype');
		  font-weight: 300;
		  font-style: normal; }
		

		@font-face {
		  font-family: 'icomoon';
		  src: url("{!URLFOR($Resource.stylepack, 'stylepack/css/fonts/icon-utility.ttf')}");
		}
	
	
	
	body {
    padding: 0;
    margin: 0;
}
html, body {
    height: 100%;
}


	/* Global Style */
	.newsicon {
		background-image: url('{!URLFOR($Resource.stylepack, 'stylepack/img/news-icon.png')}');
		width: 44px;
		background-size: 70%;
		background-repeat: no-repeat;
		background-position: 6px 8px;
	}
	
	</style>
	
	
	<!--  // End Footer includes -->

</apex:page>